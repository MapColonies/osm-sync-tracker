global:
  cloudProvider: {}
  tracing: {}
  metrics: {}
  environment: ''

enabled: true
environment: development
replicaCount: 1
revisionHistoryLimit: 5 # Amount of revisions we keep
nodePort: 30030 #for minikube deployment only
resetOnConfigChange: false

nameOverride: ""
fullnameOverride: ""

configManagement:
  offlineMode: true
  name: 'osm-sync-tracker'
  version: 'latest'
  serverUrl: 'http://localhost:8080/api'

livenessProbe:
  enabled: true
  initialDelaySeconds: 600
  timeoutSeconds: 5
  failureThreshold: 6
  path: /liveness

readinessProbe:
  enabled: true
  initialDelaySeconds: 60
  timeoutSeconds: 5
  failureThreshold: 6
  path: /liveness

podAnnotations: {}

extraVolumes: []

extraVolumeMounts: []

extraEnvVars: []

command: []
args: []
# command: [ "/bin/sh", "-c", "--" ]
# args: [ "while true; do sleep infinity; done;" ]

sidecars: []

cloudProvider:
  flavor: openshift
  dockerRegistryUrl:
  imagePullSecretName: ''

caSecretName: ''
caPath: '/usr/local/share/ca-certificates'
caKey: 'ca.crt'

image:
  repository: osm-sync-tracker
  # If commented, appVersion will be taken. See: _helpers.tpl
  # tag: 'latest'
  pullPolicy: IfNotPresent

resources:
  enabled: true
  value:
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 128Mi

env:
  port: 8080
  targetPort: 8080
  protocol: TCP
  logLevel: info
  logPrettyPrintEnabled: false
  requestPayloadLimit: 1mb
  responseCompressionEnabled: true
  tracing:
    enabled: false
    url: 'http://localhost:55681/v1/trace'
    ratio: 1
  metrics:
    enabled: false
    url: 'http://localhost:55681/v1/metrics'

# external
dbConfig:
  host: localhost
  username: postgres
  password: postgres
  database: osm-sync-tracker
  # port: 5432
  sslAuth:
    enabled: false
    secretName: secret-name
    certFileName: postgresql.crt
    keyFileName: postgresql.key
    caFileName: root.crt

redis:
  host: localhost
  username: ""
  password: ""
  db: 0
  port: 6379
  sslAuth:
    enabled: false
    secretName: secret-name
    certFileName: postgresql.crt
    keyFileName: postgresql.key
    caFileName: root.crt

closure:
  uiPath: /closure
  queues:
    changesets:
      queueOptions:
        enabledBatchJobs: true
        maxBatchSize: 10
      jobOptions:
        attempts: 10
        delay: 60000
        deduplicationDelay: 60000
        backoff:
          type: fixed
          delay: 60000
      workerOptions:
        concurrency: 1
        limiter:
          enabled: false
          # max: 10
          # duration: 1000
        maxStalledCount: 1
        stalledInterval: 30000
        removeOnComplete:
          age: 604800
          # count: 100000
        removeOnFail:
          age: 2419200
          # count: 100000
        transactionIsolationLevel: 'SERIALIZABLE'
        transactionFailureDelay: 10000
    files:
      queueOptions:
        enabledBatchJobs: false
        # maxBatchSize: 100
      jobOptions:
        attempts: 10
        delay: 60000
        deduplicationDelay: 60000
        backoff:
          type: fixed
          delay: 60000
      workerOptions:
        concurrency: 1
        limiter:
          enabled: false
          # max: 10
          # duration: 1000
        maxStalledCount: 1
        stalledInterval: 30000
        removeOnComplete:
          age: 604800
          # count: 100000
        removeOnFail:
          age: 2419200
          # count: 100000
        transactionIsolationLevel: 'SERIALIZABLE'
        transactionFailureDelay: 10000
    syncs:
      queueOptions:
        enabledBatchJobs: false
        # maxBatchSize: 100
      jobOptions:
        attempts: 10
        delay: 60000
        deduplicationDelay: 60000
        backoff:
          type: fixed
          delay: 60000
      workerOptions:
        concurrency: 1
        limiter:
          enabled: false
          # max: 10
          # duration: 1000
        maxStalledCount: 1
        stalledInterval: 30000
        removeOnComplete:
          age: 604800
          # count: 100000
        removeOnFail:
          age: 2419200
          # count: 100000
        transactionIsolationLevel: 'SERIALIZABLE'
        transactionFailureDelay: 10000

route:
  enabled: true
  path: /
  host:
  timeout:
    enabled: false # defaults to 30s by openshift
    duration: 60s # supported units (us, ms, s, m, h, d)
  rewriteTarget: ''
  tls:
    enabled: true
    termination: edge
    insecureEdgeTerminationPolicy: Redirect
    useCerts: false
    certificate: ''
    key: ''
    caCertificate: ''

ingress:
  enabled: false
  path: /
  host: 'localhost'
  cors:
    enabled: true
    origin: '*'