openapi: 3.0.1
info:
  title: Entities Sync tracker
  version: 1.0.0
paths:
  /sync:
    post:
      summary: Register a new sync
      requestBody:
        description: start tracking a new synchronization
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/sync'
              - type: object
                required: 
                  - id
                  - startDate
                  - layerId
                  - isFull
        required: true
      responses:
        '201':
          description: created
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '5XX':
          $ref: '#/components/responses/UnexpectedError'
  /sync/latest:
    get:
      summary: Get the latest sync based on start date
      parameters: 
        - in: query
          name: layerId
          schema:
            $ref: '#/components/schemas/layerId'
          required: true
      responses:
        200:
          description: the latest sync for the requsted layer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sync' 
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '5XX':
          $ref: '#/components/responses/UnexpectedError'
  /sync/{syncId}:
    patch:
      summary: Update the sync
      parameters: 
      - $ref: "#/components/parameters/syncId"
      requestBody:
        description: the propeties to update in the sync
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/syncWithoutId'
        required: true
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '5XX':
          $ref: '#/components/responses/UnexpectedError'
  /sync/{syncId}/file:
    post:
      summary: add a file to the sync
      parameters: 
      - $ref: "#/components/parameters/syncId"
      requestBody:
        description: the file that is part of the mentioned sync
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/file'
        required: true
      responses:
        '201':
          description: created
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '5XX':
          $ref: '#/components/responses/UnexpectedError'
  /file/{fileId}/entity:
    post:
      summary: add a new entity to the file
      description: add a entity that is part of the file, once all entities are completed the file will be considered done
      parameters: 
      - $ref: "#/components/parameters/fileId"
      requestBody:
        description: entity
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/entity'
        required: true
      responses:
        '201':
          description: created
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '5XX':
          $ref: '#/components/responses/UnexpectedError'
  /file/{fileId}/entity/{entityId}:
    patch:
      summary: Update the entity parameters
      parameters: 
        - $ref: "#/components/parameters/fileId"
        - in: path
          name: entityId
          schema:
            type: string
          required: true
      requestBody:
        description: the updated properties for the entity
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/entityWithoutId'
        required: true
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '5XX':
          $ref: '#/components/responses/UnexpectedError'
  /changeset:
    post:
      summary: add a new changeset
      description: add a new changeset. note that a changeset might contain entities from multiple syncs
      requestBody:
        description: the changeset to add
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/changeset'
                - type: object
                  required:
                    - id
        required: true
      responses:
        '201':
          description: created
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '5XX':
          $ref: '#/components/responses/UnexpectedError'
  /changeset/{changesetId}:
    patch:
      summary: Update the changeset properties
      parameters: 
        - $ref: "#/components/parameters/changesetId"
      requestBody:
        description: the changeset properties to edit
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/changesetWithoutId'
        required: true
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '5XX':
          $ref: '#/components/responses/UnexpectedError'
  /changeset/{changesetId}/close:
    put:
      summary: close the changeset
      description: closes the changeset, sets all its entities as done, and checks if the sync is completed
      parameters: 
        - $ref: "#/components/parameters/changesetId"
      requestBody:
        content: {}
        required: true
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '5XX':
          $ref: '#/components/responses/UnexpectedError'
components:
  responses:
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    NotFound:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    UnexpectedError:
      description: Unexpected Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
  parameters:
    syncId:
      in: path
      name: syncId
      schema:
        $ref: "#/components/schemas/uniqueId"
      required: true
    changesetId:
      in: path
      name: changesetId
      schema:
        $ref: "#/components/schemas/uniqueId"
      required: true
    entityId:
      in: path
      name: entityId
      schema:
        $ref: "#/components/schemas/entityId"
      required: true
    fileId:
      in: path
      name: fileId
      schema:
        $ref: "#/components/schemas/uniqueId"
      required: true
  schemas:
    Error:
      type: object
      properties:
        message:
          type: string
    uniqueId:
      type: string
      format: uuid
    entityId:
      type: string
      pattern: '{[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}}'
    layerId:
      type: integer
    syncWithoutId:
      type: object
      properties:
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        layerId:
          $ref: '#/components/schemas/layerId'
        isFull:
          type: boolean
        filesTotal:
          type: integer
    sync:
      allOf:
        - type: object
          properties:
            id:
              $ref: "#/components/schemas/uniqueId"
        - $ref: "#/components/schemas/syncWithoutId"
    file:
      type: object
      properties:
        fileId:
          $ref: "#/components/schemas/uniqueId"
        syncId:
          allOf:
          - $ref: "#/components/schemas/uniqueId"
          - readOnly: true
        entitiesTotal:
          type: integer
          format: int64
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
    changesetWithoutId:
      type: object
      properties:
        osmId:
          type: integer
          format: int64
    changeset:
      allOf:
      - type: object
        properties:
          id:
            type: string
            format: uuid
      - $ref: "#/components/schemas/changesetWithoutId"
    entityWithoutId:
      type: object
      properties:
        entityId:
          $ref: '#/components/schemas/entityId'
        fileId:
          allOf:
            - $ref: "#/components/schemas/uniqueId"
            - readOnly: true
        changesetId:
          $ref: "#/components/schemas/uniqueId"
        status:
          type: string
          enum: [pending, not_synced ,completed, failed]
        action:
          type: string
          enum: [create, modify, delete]
        failReason:
          type: string
          maxLength: 500
    entity:
      allOf:
        - type: object
          properties:
            entityId:
              $ref: "#/components/schemas/uniqueId"
        - $ref: "#/components/schemas/entityWithoutId"
